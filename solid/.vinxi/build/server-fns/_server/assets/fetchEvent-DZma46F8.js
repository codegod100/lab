import{H3Event as f,setHeader as _,appendResponseHeader as w,getRequestIP as A,parseCookies as T,getResponseStatus as q,getResponseStatusText as E,getCookie as $,setCookie as k,getResponseHeader as L,setResponseHeader as P,removeResponseHeader as W,getResponseHeaders as j,getRequestURL as I,getRequestWebStream as O,setResponseStatus as U}from"h3";import{AsyncLocalStorage as F}from"node:async_hooks";function N(t={}){let e,s=!1;const r=n=>{if(e&&e!==n)throw new Error("Context conflict")};let a;if(t.asyncContext){const n=t.AsyncLocalStorage||globalThis.AsyncLocalStorage;n?a=new n:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const d=()=>{if(a){const n=a.getStore();if(n!==void 0)return n}return e};return{use:()=>{const n=d();if(n===void 0)throw new Error("Context is not available");return n},tryUse:()=>d(),set:(n,i)=>{i||r(n),e=n,s=!0},unset:()=>{e=void 0,s=!1},call:(n,i)=>{r(n),e=n;try{return a?a.run(n,i):i()}finally{s||(e=void 0)}},async callAsync(n,i){e=n;const v=()=>{e=n},p=()=>e===n?v:void 0;h.add(p);try{const C=a?a.run(n,i):i();return s||(e=void 0),await C}finally{h.delete(p)}}}}function K(t={}){const e={};return{get(s,r={}){return e[s]||(e[s]=N({...t,...r})),e[s]}}}const u=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},g="__unctx__",B=u[g]||(u[g]=K()),M=(t,e={})=>B.get(t,e),y="__unctx_async_handlers__",h=u[y]||(u[y]=new Set);function z(t){let e;const s=x(t),r={duplex:"half",method:t.method,headers:t.headers};return t.node.req.body instanceof ArrayBuffer?new Request(s,{...r,body:t.node.req.body}):new Request(s,{...r,get body(){return e||(e=Y(t),e)}})}function D(t){return t.web??={request:z(t),url:x(t)},t.web.request}function G(){return se()}const m=Symbol("$HTTPEvent");function J(t){return typeof t=="object"&&(t instanceof f||t?.[m]instanceof f||t?.__is_event__===!0)}function o(t){return function(...e){let s=e[0];if(J(s))e[0]=s instanceof f||s.__is_event__?s:s[m];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(s=G(),!s)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");e.unshift(s)}return t(...e)}}const x=o(I),Q=o(A),R=o(U),b=o(q),V=o(E),c=o(j),S=o(L),X=o(P),H=o(w),ce=o(T),ue=o($),le=o(k),fe=o(_),Y=o(O),Z=o(W),ee=o(D);function te(){return M("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:F})}function se(){return te().use().event}const l="solidFetchEvent";function ne(t){return{request:ee(t),response:re(t),clientAddress:Q(t),locals:{},nativeEvent:t}}function de(t){return{...t}}function pe(t){if(!t.context[l]){const e=ne(t);t.context[l]=e}return t.context[l]}function ge(t,e){for(const[s,r]of e.entries())H(t,s,r)}class oe{event;constructor(e){this.event=e}get(e){const s=S(this.event,e);return Array.isArray(s)?s.join(", "):s||null}has(e){return this.get(e)!==void 0}set(e,s){return X(this.event,e,s)}delete(e){return Z(this.event,e)}append(e,s){H(this.event,e,s)}getSetCookie(){const e=S(this.event,"Set-Cookie");return Array.isArray(e)?e:[e]}forEach(e){return Object.entries(c(this.event)).forEach(([s,r])=>e(Array.isArray(r)?r.join(", "):r,s,this))}entries(){return Object.entries(c(this.event)).map(([e,s])=>[e,Array.isArray(s)?s.join(", "):s])[Symbol.iterator]()}keys(){return Object.keys(c(this.event))[Symbol.iterator]()}values(){return Object.values(c(this.event)).map(e=>Array.isArray(e)?e.join(", "):e)[Symbol.iterator]()}[Symbol.iterator](){return this.entries()[Symbol.iterator]()}}function re(t){return{get status(){return b(t)},set status(e){R(t,e)},get statusText(){return V(t)},set statusText(e){R(t,b(t),e)},headers:new oe(t)}}export{pe as a,R as b,fe as c,de as d,ue as g,ge as m,ce as p,le as s};
